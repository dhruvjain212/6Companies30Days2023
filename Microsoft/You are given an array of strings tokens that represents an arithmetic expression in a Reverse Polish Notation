//Approach: 1. Iterate for all the characters in the given array.
//           2. If character is a numerical value(operand) then push it into stack.
//           3. If it is an operand then take two topmost elements from the stack and perform that operation on them.
//           4. Push the result of the operation into stack.
         
#include<stack>

class Solution {
public:
    int evalRPN(vector<string>& tokens) {
        stack<int>st;
        int n= tokens.size();
        int i=0;

        for(int i=0; i<n; i++){
            if(tokens[i] == "+" || tokens[i] == "-" || tokens[i] == "*" ||
             tokens[i] == "/"){
                // string str= st.top();
                //  int a= stoi(str);
                int a= st.top();
                 st.pop();

                //  str= st.top();
                //  int b= stoi(str);
                int b= st.top();
                 st.pop();

                 int temp;
                 if(tokens[i] == "+"){
                   temp= b+a;
                   st.push(temp);
                 }
                 else if(tokens[i] == "-"){
                   temp= b-a;
                   st.push(temp);
                 }
                 else if(tokens[i] == "*"){
                    temp= b*a;
                    st.push(temp);
                 }
                 else{
                     temp= b/a;
                     st.push(temp);
                 }
            }
            else{
                int x= stoi(tokens[i]);
            st.push(x);
            }
        }

        return st.top();
    }
};
